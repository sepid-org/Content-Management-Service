# Generated by Django 4.1.3 on 2024-10-21 15:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('attributes', '0004_alter_performableaction_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('intrinsicattribute_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='attributes.intrinsicattribute')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('attributes.intrinsicattribute',),
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('performableaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='attributes.performableaction')),
                ('destination_state_id', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('attributes.performableaction',),
        ),
        migrations.AlterModelOptions(
            name='intrinsicattribute',
            options={'verbose_name': 'Intrinsic Attribute', 'verbose_name_plural': 'Intrinsic Attributes'},
        ),
        migrations.AlterModelOptions(
            name='performableaction',
            options={'verbose_name': 'Performable Action', 'verbose_name_plural': 'Performable Actions'},
        ),
        migrations.RemoveField(
            model_name='intrinsicattribute',
            name='type',
        ),
        migrations.RemoveField(
            model_name='performableaction',
            name='type',
        ),
        migrations.AlterField(
            model_name='attribute',
            name='attributes',
            field=models.ManyToManyField(blank=True, related_name='related_to', to='attributes.attribute'),
        ),
    ]
